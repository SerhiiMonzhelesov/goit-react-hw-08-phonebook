{"version":3,"file":"static/js/58.f8c4e800.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.jsx","components/Contacts/StyledContacts.js","components/Contacts/Contacts.jsx","components/Filter/Filter.jsx","services/report.js","pages/ContactsPage.jsx","pages/StyledSection.js"],"sourcesContent":["import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nfunction ContactForm({ onAddContact }) {\n  const [newUser, setnewUser] = useState({ name: '', number: '' });\n\n  const onInputChange = e => {\n    setnewUser({ ...newUser, [e.target.name]: e.target.value });\n  };\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n\n    onAddContact(newUser);\n\n    e.target.reset();\n  };\n\n  return (\n    <>\n      <form onSubmit={onFormSubmit} className=\"form-signin\">\n        <label>\n          Name:\n          <input\n            onChange={onInputChange}\n            type=\"text\"\n            name=\"name\"\n            maxLength=\"24\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. \n              For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan.\n              Maximum length of name is 24 characters\"\n            required\n          />\n        </label>\n        <label>\n          Phone number:\n          <input\n            onChange={onInputChange}\n            type=\"tel\"\n            name=\"number\"\n            maxLength=\"12\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n        <button type=\"submit\">Add contact</button>\n      </form>\n    </>\n  );\n}\n\nexport default ContactForm;\n\nContactForm.propTypes = {\n  onAddContact: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nconst StyledContacts = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  padding: 0;\n  margin: 0 auto;\n  width: 100%;\n  max-width: 400px;\n\n  & .icon {\n    color: inherit;\n    width: 16px;\n    height: 16px;\n  }\n\n  & li {\n    display: flex;\n    gap: 10px;\n    border: 1px solid #cce2ce4d;\n    padding: 10px 10px 10px 25px;\n    justify-content: space-between;\n    border-radius: 10px;\n    background: #dcf1e759;\n    font-size: 14px;\n    box-shadow: 3px 3px 5px 0px #d7d3d3;\n  }\n\n  & p {\n    margin: 0;\n  }\n`;\n\nexport default StyledContacts;\n","import StyledContacts from './StyledContacts';\nimport { ImBin } from 'react-icons/im';\nimport PropTypes from 'prop-types';\n\nfunction Contacts({ contacts, onRemoveContact }) {\n  return (\n    <StyledContacts>\n      {contacts.map(({ name, number, id }) => {\n        return (\n          <li key={id} className=\"item\">\n            <p className=\"text\">{name}</p>\n            <p>{number}</p>\n            <button\n              type=\"button\"\n              onClick={() => onRemoveContact(id)}\n              className=\"delete-btn\"\n            >\n              <ImBin className=\"icon\" />\n            </button>\n          </li>\n        );\n      })}\n    </StyledContacts>\n  );\n}\n\nexport default Contacts;\n\nContacts.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n  onRemoveContact: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nfunction Filter({ handleChangeFilter }) {\n  return (\n    <label className=\"filter-label\">\n      Find contacts by name\n      <input\n        type=\"text\"\n        onChange={handleChangeFilter}\n        className=\"filter-input\"\n      ></input>\n    </label>\n  );\n}\n\nexport default Filter;\n\nFilter.propTypes = {\n  handleChangeFilter: PropTypes.func.isRequired,\n};\n","import { Report } from 'notiflix/build/notiflix-report-aio';\n\nfunction errorInfo(error) {\n  console.log(error);\n  Report.failure(`${error.code}`, `${error.message}`, 'OK', {\n    width: '400px',\n    messageFontSize: '16px',\n    titleFontSize: '32px',\n    svgSize: '65px',\n    backOverlayClickToClose: true,\n  });\n}\n\nfunction warningInfo(name) {\n  Report.warning(\n    'WARNING',\n    `Сannot add user, because \"${name}\" is already in contacts`,\n    'OK',\n    {\n      width: '400px',\n      messageFontSize: '16px',\n      titleFontSize: '32px',\n      svgSize: '65px',\n      backOverlayClickToClose: true,\n    }\n  );\n}\n\nexport { errorInfo, warningInfo };\n","import ContactForm from 'components/ContactForm/ContactForm';\nimport Contacts from 'components/Contacts/Contacts';\nimport Filter from 'components/Filter/Filter';\nimport Loader from 'components/Loader/Loader';\nimport Container from 'components/Container/Container';\nimport StyledSection from './StyledSection';\n\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { setFilter } from 'redux/Slice/phonebookSlice';\nimport {\n  addUser,\n  getContacts,\n  removeContact,\n} from 'redux/Thunk/phonebookThunk';\nimport {\n  selectContacts,\n  selectError,\n  selectFilter,\n  selectLoading,\n  selectUserData,\n} from 'redux/selectors';\n\nimport { errorInfo, warningInfo } from 'services/report';\n\nfunction ContactsPage() {\n  const users = useSelector(selectContacts);\n  const userData = useSelector(selectUserData);\n  const isLoading = useSelector(selectLoading);\n  const filter = useSelector(selectFilter);\n  const error = useSelector(selectError);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!userData) return;\n    dispatch(getContacts());\n  }, [dispatch, userData]);\n\n  const onAddContact = contactData => {\n    const isAlready = users.some(user => user.name === contactData.name);\n    isAlready ? warningInfo(contactData.name) : dispatch(addUser(contactData));\n  };\n\n  const onRemoveContact = contactId => {\n    dispatch(removeContact(contactId));\n  };\n\n  const handleChangeFilter = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  const filterContacts = () => {\n    const filteredContacts = users?.filter(user =>\n      user.name.toLowerCase().includes(filter.toLowerCase().trim())\n    );\n    return filteredContacts;\n  };\n\n  return (\n    userData && (\n      <StyledSection>\n        <Container>\n          <h1>Phonebook</h1>\n          <ContactForm onAddContact={onAddContact} />\n          {users.length ? (\n            <>\n              <h2>Contacts</h2>\n              <Filter handleChangeFilter={handleChangeFilter} />\n            </>\n          ) : (\n            <p className=\"message\">No contacts in the phonebook</p>\n          )}\n          {isLoading && <Loader />}\n          {error && <>{errorInfo(error)}</>}\n          {users.length > 0 && !isLoading && (\n            <Contacts\n              contacts={filterContacts()}\n              onRemoveContact={onRemoveContact}\n            />\n          )}\n        </Container>\n      </StyledSection>\n    )\n  );\n}\n\nexport default ContactsPage;\n","import styled from 'styled-components';\n\nconst StyledSection = styled.section`\n  text-align: center;\n\n  .form-signin {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 25px;\n    width: 100%;\n    max-width: 500px;\n    margin: 0 auto;\n    border: 1px solid #cce2ce4d;\n    border-radius: 8px;\n    padding: 30px 15px;\n    box-shadow: 3px 3px 5px 0px #d7d3d3;\n    text-shadow: 0px 0px 3px #16430c8f;\n    background: #dcf1e759;\n  }\n\n  label {\n    font-size: 16px;\n    text-align: end;\n    width: 100%;\n    max-width: 360px;\n    text-shadow: 0px 0px 3px #16430c8f;\n  }\n\n  label.filter-label {\n    text-align: center;\n    max-width: 450px;\n  }\n\n  input {\n    font-size: 14px;\n    margin-left: 15px;\n    padding: 10px;\n    border-radius: 5px;\n    border: 1px solid #878987;\n    border-left: none;\n    border-top: none;\n    box-shadow: 1px 1px 4px 0px #d7d3d3;\n    background: #f9faf9fc;\n    width: 100%;\n    max-width: 235px;\n  }\n\n  input.filter-input {\n    margin-bottom: 15px;\n  }\n\n  button {\n    font-size: 16px;\n    color: #22301e;\n    padding: 10px;\n    border: 1px solid #8aee8a7d;\n    border-radius: 8px;\n    background: #93e86973;\n    cursor: pointer;\n    text-shadow: 0px 0px 5px #16430cc9;\n    align-self: center;\n    max-width: 130px;\n    width: 100%;\n  }\n\n  button:hover {\n    box-shadow: 3px 3px 5px 0px #b7b1b1;\n    background: #6ea46efc;\n    color: #ffffff;\n    border: 1px solid #5da45d7d;\n    text-shadow: none;\n  }\n\n  button.delete-btn {\n    border: none;\n    background-color: inherit;\n    padding: 0;\n    display: flex;\n    cursor: pointer;\n    color: #9e9a9a;\n    width: 16px;\n  }\n\n  button.delete-btn:hover {\n    color: #f26969;\n    box-shadow: none;\n    background: none;\n    border: none;\n    text-shadow: none;\n  }\n\n  .home-text {\n    width: 100%;\n    max-width: 500px;\n    margin: 0 auto;\n  }\n`;\n\nexport default StyledSection;\n"],"names":["_ref","onAddContact","_useState","useState","name","number","_useState2","_slicedToArray","newUser","setnewUser","onInputChange","e","_objectSpread","_defineProperty","target","value","_jsx","_Fragment","children","_jsxs","onSubmit","preventDefault","reset","className","onChange","type","maxLength","pattern","title","required","styled","_templateObject","_taggedTemplateLiteral","contacts","onRemoveContact","StyledContacts","map","_ref2","id","onClick","ImBin","handleChangeFilter","errorInfo","error","console","log","Report","concat","code","message","width","messageFontSize","titleFontSize","svgSize","backOverlayClickToClose","users","useSelector","selectContacts","userData","selectUserData","isLoading","selectLoading","filter","selectFilter","selectError","dispatch","useDispatch","useEffect","getContacts","StyledSection","Container","ContactForm","contactData","some","user","addUser","length","Filter","setFilter","Loader","Contacts","toLowerCase","includes","trim","contactId","removeContact"],"sourceRoot":""}